apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "release.fullname" . }}-backend
  labels:
  {{- include "release.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: backend
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backend
        tier: backend
      annotations:
        rollme: {{ randAlphaNum 5 | quote }} # TODO: replace with hash of configmaps and secrets
    spec:
      containers:
      - command:
        - bundle
        - exec
        - rails
        - server
        - -p
        - "3000"
        - -b
        - 0.0.0.0
        env:
        - name: REDIS_SERVICE_HOST
          value: {{ include "release.fullname" . }}-redis
        envFrom:
        - configMapRef:
            name: {{ include "release.fullname" . }}-common-configmap
        - secretRef:
            name: {{ include "release.fullname" . }}-common-secret
        - configMapRef:
            name: {{ include "release.fullname" . }}-backend-configmap
        - secretRef:
            name: {{ include "release.fullname" . }}-backend-secret
        image: {{ .Values.containerRegistry.host}}/release/spacedust/backend:{{ .Values.tag }}
        imagePullPolicy: Always
        # livenessProbe:
        #   httpGet:
        #     path: "/health"
        #     port: 3000
        #   failureThreshold: 40
        #   periodSeconds: 5
        #   timeoutSeconds: 10
        name: backend
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/health"
            port: 3000
          failureThreshold: 40
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 6Gi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: {{ include "release.fullname" . }}-config
      imagePullSecrets:
      - name: {{ include "release.fullname" . }}-registry-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "release.fullname" . }}-backend
  labels:
    app: backend
  {{- include "release.labels" . | nindent 4 }}
spec:
  type: {{ .Values.frontend.type }}
  selector:
    app: backend
    tier: backend
  ports:
	{{- .Values.backend.ports | toYaml | nindent 2 -}}
